// Generated by Dagger (https://dagger.dev).
package biz.filmeroo.premier.detail;

import com.squareup.picasso.Picasso;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DetailActivity_MembersInjector implements MembersInjector<DetailActivity> {
  private final Provider<FilmDetailPresenter> presenterProvider;

  private final Provider<Picasso> picassoProvider;

  public DetailActivity_MembersInjector(Provider<FilmDetailPresenter> presenterProvider,
      Provider<Picasso> picassoProvider) {
    this.presenterProvider = presenterProvider;
    this.picassoProvider = picassoProvider;
  }

  public static MembersInjector<DetailActivity> create(
      Provider<FilmDetailPresenter> presenterProvider, Provider<Picasso> picassoProvider) {
    return new DetailActivity_MembersInjector(presenterProvider, picassoProvider);
  }

  @Override
  public void injectMembers(DetailActivity instance) {
    injectPresenter(instance, presenterProvider.get());
    injectPicasso(instance, picassoProvider.get());
  }

  @InjectedFieldSignature("biz.filmeroo.premier.detail.DetailActivity.presenter")
  public static void injectPresenter(DetailActivity instance, FilmDetailPresenter presenter) {
    instance.presenter = presenter;
  }

  @InjectedFieldSignature("biz.filmeroo.premier.detail.DetailActivity.picasso")
  public static void injectPicasso(DetailActivity instance, Picasso picasso) {
    instance.picasso = picasso;
  }
}
