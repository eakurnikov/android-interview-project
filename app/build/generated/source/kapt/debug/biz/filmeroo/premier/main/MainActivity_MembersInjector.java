// Generated by Dagger (https://dagger.dev).
package biz.filmeroo.premier.main;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<FilmPresenter> presenterProvider;

  private final Provider<FilmAdapter> adapterProvider;

  public MainActivity_MembersInjector(Provider<FilmPresenter> presenterProvider,
      Provider<FilmAdapter> adapterProvider) {
    this.presenterProvider = presenterProvider;
    this.adapterProvider = adapterProvider;
  }

  public static MembersInjector<MainActivity> create(Provider<FilmPresenter> presenterProvider,
      Provider<FilmAdapter> adapterProvider) {
    return new MainActivity_MembersInjector(presenterProvider, adapterProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectPresenter(instance, presenterProvider.get());
    injectAdapter(instance, adapterProvider.get());
  }

  @InjectedFieldSignature("biz.filmeroo.premier.main.MainActivity.presenter")
  public static void injectPresenter(MainActivity instance, FilmPresenter presenter) {
    instance.presenter = presenter;
  }

  @InjectedFieldSignature("biz.filmeroo.premier.main.MainActivity.adapter")
  public static void injectAdapter(MainActivity instance, FilmAdapter adapter) {
    instance.adapter = adapter;
  }
}
