// Generated by Dagger (https://dagger.dev).
package biz.filmeroo.premier.app;

import android.content.res.Resources;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideOkHttpClientFactory implements Factory<OkHttpClient> {
  private final AppModule module;

  private final Provider<Resources> resourcesProvider;

  public AppModule_ProvideOkHttpClientFactory(AppModule module,
      Provider<Resources> resourcesProvider) {
    this.module = module;
    this.resourcesProvider = resourcesProvider;
  }

  @Override
  public OkHttpClient get() {
    return provideOkHttpClient(module, resourcesProvider.get());
  }

  public static AppModule_ProvideOkHttpClientFactory create(AppModule module,
      Provider<Resources> resourcesProvider) {
    return new AppModule_ProvideOkHttpClientFactory(module, resourcesProvider);
  }

  public static OkHttpClient provideOkHttpClient(AppModule instance, Resources resources) {
    return Preconditions.checkNotNullFromProvides(instance.provideOkHttpClient(resources));
  }
}
